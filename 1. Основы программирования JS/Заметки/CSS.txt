///CSS///

Для примера добавим простенький CSS прямо в заголовок нашей страницы. Для этого в между
тегами head добавим парный тег style, а внутри него код CSS.

<!DOCTYPE html>
<html>
	<head>
		<metacharset="utf-8">
		<title>Иванов Иван</title>
		<style>
			strong{
				color: red;
			}
			.my_style{
				font-size: 30px;
				color: blue;
			}
		</style>
	</head>
	<body>
		<strong>Папа у Васи силен в математике,</strong><br>
		<emclass="my_style">Учится папа за Васю весь год,</em><br>
		<i>Где это видано, где это слыхано,</i><br>
		<b>Папа решает, а Вася сдает?</b>
	</body>
</html>

CSS задает стиль отображения информации. Здесь мы продемонстрировали два способа задания
стиля. Первый, strong - мы описали без точки вначале, что означает, что этот стиль применяется для
всех тегов strong на этой странице. Второй, .my_style с точной в начале - мы создали класс стиля,
который потом можно назначать на веб-странице, что мы и сделали назначив этот стиль тексту
заключенному между тегами em. Сами же стили довольно простые, в первом случаем мы указали, что
нужно выводить красным цветом, во втором, что требуется задать размер шрифта в 30 пикселей и
выводить информацию синим цветом.

//Подготовка и вставка картинки//

Для вставки картинки используется одинарный тег img:
<imgsrc="img/photo.png"alt="фотография"

Атрибут src указывает расположение картинки. Атрибут alt нужен для того, чтобы показать какой текст
будет выводиться, если вдруг у пользователя отключен вывод картинок, или картинка будет не
доступна. Должно получиться:

<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title></title>
	</head>
	<body>
		<img src="img/photo.png" alt="фотография">
	</body>
</html>

//Заголовок//

Добавим заголовок. Для этого используется парный тег <h1>. Добавим перед картинкой текст:
<h1>Личный сайт студента GeekBrains</h1>
Получится:

<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title></title>
	</head>
	<body>
		<h1>Личный сайт студента GeekBrains</h1>
		<img src="img/photo.png"alt="фотография">
	</body>
</html>

//Параграфы//

Добавим информацию о себе. Для этого используем парный тег <p> и одинарный <br>. Добавьте под
тегом img следующий текст

<p>
	Добрый день. Меня зовут Василий Пупкин.
	<br>
	Я - начинающий программист. Я совсем недавно встал на этот путь, но уже успел
	написать свой первый сайт.
</p>

//Ссылки//

Парный тег <a></a> указывает браузеру, что содержимое элемента (это может быть и текст, и
картинка) является ссылкой, и, при щелчке по ссылке(то есть по содержимому), браузер попытается
перейти по адресу указанном в атрибуте href.

<p>
	В этом мне помог курс
	<a href="https://geekbrains.ru/courses/2">
	Основы программирования
	</a>
	образовательного IT-портала GeekBrains.
</p

Тег <a> поддерживает атрибут target, который указывает в какой вкладке открыть страницу,
указанную в ссылке. Например, target=”_blank” - указание загрузить страницу в новой вкладке.

<p>
	В этом мне помог курс
	<ahref="https://geekbrains.ru/courses/2"target="_blank">
	Основы программирования
	</a>
	образовательного IT-портала GeekBrains.
</p>


//<span>//

Парный тег <span></span> - это, наверное, самый трудный для понимания тег. Он как бы говорит, что
внутри заключен кусочек текста. На самом деле в HTML есть еще теги, которые позволяют задать
некоторую логику страницы, span один из них. Он не влияет непосредственно на сам вывод, но
позволит в дальнейшем элементам, заключенным в этот тег, придать стиль с помощью CSS. С
помощью <span> и CSS мы добавим промежутки между пунктами меню.

//DIV - разделяй и властвуй//

Для того, чтобы сайт стал более красивым, нужно задать стили
оформления, но перед этим нужно задать логику сайта с помощью тегов <div> и атрибутов id.

<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title>Личный сайт студента GeekBrains</title>
	</head>
	<body>
		<div id="header">
			<a href="#">Главная</a>
			<span>/</span>
			<a href="#">Загадки</a>
			<span>/</span>
			<ahref="#">Угадайка</a>
			<span>/</span>
			<ahref="#">Угадайка мультиплеер</a>
		</div>

		<div id="content">
			<h1>Личный сайт студента GeekBrains</h1>

			<div id="center">
				<img src="img/photo.png"alt="фотография">

				<div id="box_text">
					<p>
						Добрый день. Меня зовут <b>Василий Пупкин</b>.
						Я - <i>начинающий программист</i>. Я совсем недавно встал
						на этот путь, но уже успел написать свой первый сайт.
					</p>
					<p>
						В этом мне помог курс 
						<a href="https://geekbrains.ru/courses/2">Основы программирования</a>
					</p>
					<p>
						На этом сайте вы сможете сыграть в три игры, которые я
						написал:
					</p>
					<ahref="#">Главная</a>
					<ahref="#">Загадки</a>
					<ahref="#">Угадайка</a>
					<ahref="#">Угадайка мультиплеер</a>
					<br><br>
				</div>
			</div>
		</div>

		<div id="footer">
			Copyright © 2016 <ahref="https://geekbrains.ru/">GeekBrains</a>
		</div>

	</body>
</html>

Сам тег div, так же как и <span>, не влияет на вывод информации на экран. Но он позволяет
разделить веб-страницу на разделы, на которые можно будет потом влиять с помощью CSS кода.
Атрибут ID дает название разделам, чтобы по ID можно было обратиться к нужному разделу и
изменить его стиль оформления.

//Подключим CSS//

Добавьте в <head> тег загрузки стиля - <link rel="stylesheet" href="style.css">
Должно получиться примерно следующее:

<head>
	<metacharset="utf-8">
	<title>Личный сайт студента GeekBrains</title>
	<link rel="stylesheet" href="style.css">
</head>

Теперь перейдем к созданию файла, который будет влиять на стиль отображения информации на
экране

///Его величество CSS///

Теперь мы подошли к одновременно самой сложной и самой простой части урока. Сложность
заключается в большом количестве новой информации, которая на вас обрушится. Простота же
заключатся в том, что на первых порах не обязательно понимать всё, что вы увидите. CSS не так
сложен, как может показаться на первый взгляд. Для начала поймите, что он будет влиять на
отображения страницы.

Структура CSS
CSS - это уже не HTML, хотя и используется совместно. При описании CSS чаще всего используется
следующая структура:

Название_стиля
{
	описание1;
	описание2;
	...
}

Название_стиля - грамотно называть селектором, а описание - свойством.

//body и #header//

Перед названием стиля могут стоять значки . или #, которые указывают, к чему требуется применить
этот стиль.
Например, для тегов можно задать стиль таким образом:

body{
	background-color: #555;
	font-family: sans-serif;
}

	Это указание, что для тега body сделать фон цветом #555, а шрифт sans-serif
	Таким образом можно указать стиль для тегов у которых атрибут id=”header”:

#header{
	width: 1300px;
	margin: 0 auto;
	height: 50px;
	text-align: center;
	padding-top: 18px;
}

//*.padding и margin//

* - звездочка - это указание применить стиль для всех тегов

*{
	margin: 0;
	padding: 0;
}

padding и margin - это отступы. Первое создаёт отступы вокруг содержимого, второе расширяет поле
до границы элемента.

//Стилизация вложенных тегов//

#header a{
	color: #4d4d4d;
	font-size: 20px;
	font-weight: 100;
	text-align: left;
	text-decoration: none;
	height: 30px;
	line-height: 30px;
	display: inline-block;
}

Здесь мы как бы говорим, “Эй! Все теги <a>, которые имеют id=”header”, будьте со своим стилем”

//@import//

@import - Позволяет импортировать содержимое CSS-файла в текущую стилевую таблицу. 
