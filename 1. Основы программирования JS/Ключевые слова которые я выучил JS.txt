 	
РЕКУРСИЯ НА ПРИМЕРЕ ВЫЧИСЛЕНИЯ ФАКТОРИАЛА ЧИСЛА n:

function recursiveFactorial(n){
		if(n == 0){
			return 1;
		} else {
			return recursiveFactorial(n - 1) * n; 
			}
	}

	var rf = recursiveFactorial(4);

СУТЬ ПРИМЕРНО ТАКОВА: factorial(4) = factorial(4 - 1) * 4 = factorial(3) * 4;
		      factorial(3) = factorial(3 - 1) * 4 = factorial(2) * 4;
		      factorial(2) = factorial(2 - 1) * 4 = factorial(1) * 4;
		      factorial(1) = factorial(1 - 1) * 4 = factorial(0) * 4;
		      т.к. теперь n = 0 и выполнено условие (0 == 0) , то factorial(0) = 1;
		      теперь постепенно выходим из глубин функции		      
		      factorial(1) = factorial(0) * 4 = 1 * 4 = 4;
		      factorial(2) = factorial(1) * 4 = 4 * 4 = 16;
		      factorial(3) = factorial(2) * 4 = 16 * 4 = 64;
		      factorial(4) = factorial(3) * 4 = 64 * 4 = 256;
		      выходим из функции и возвращаем значение factorial(4) переменной rf.

____________________________________________________________________________________________________________________________


переменная.splice(значение массива, второе значение массива(если оно есть) и т.д.) - удаляет значения из массива/многомерного массива.

пременная.length - максимальное колличество значений массива.

переменная.toFixed(число) - ключевое слово, отсекающее числа после запятой до значения, которое указывается в скобках.

переменная.toLowerCase - ключевое слово, которое позволяет слову содержащемуся в переменной при вводе пользователем начинаться как
			 с маленькой, так и с большой буквы.
parseInt(переменная) - ключевое слово, для перевода значения переменной в численное значение + округление в меньшую сторону.

parseFloat(переменная) - ключевое слово для работы с десятичными дробями и вроде так же как и parseInt.

Math.random() * 100 - например умножив на 100 это ключевое слово, оно будет генерировать случайные числа от 0 до 100.

var n[...] - объявляем массив.

n.unshift(1); - добавляем значение 1 в массив (в начало).

n.push(1); - добавляем значение 1 в массив (последним).

n.pop(); - удаляем последнее значение из массива.

n.shift(); - удаляем первое значение из массива, сдвигая очередь.

Math.round - округление в правильную сторону (если 0.3, то будет 0, а если 0.5, то будет 1). 